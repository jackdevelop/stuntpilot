

以前是在清理 children 后再触发的 cleanup 事件，现在是先触发事件了
正确做法是：先清理children  在触发 cleanup 事件


removeSelf时，c++对象必然会被回收
Fps显示后面多了一个数值，是当前还未删除的cpp对象


display.removeUnusedSpriteFrames 只能删除打包后的材质，不能删除背景图这种单独的图片


SpriteFrame 是那种很多小图打包到一起的，就称为材质吧。材质里所有小图都没有使用时才能够卸载成功。
而背景通常是独立的图片，需要单独卸载



材质要删除后，plist才能删除
这样说吧。你首先要把所有sprite从场景里删除掉，然后才能清理这些sprite用到的 sprite frame，接下来才能清理 texture














webp的load时间和压缩时的品质成正比。所以用70-80%的品质就好了
而且不要每一张图都webp。你要综合考虑。背景图用webp，其他用png是比较合理的选择。
jpg压缩率不如webp啊。而且解压的瞬间占用3倍内存







你们可以Xcode真机调试，看看 Xcode 的性能检测。可以看到 CPU/GPU 的占用率，如果GPU满了，说明是渲染导致卡。如果GPU没满，而CPU满了，那就是代码慢了。然后再逐层找问题吧。